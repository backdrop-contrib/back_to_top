<?php
/**
 * @file
 * Displays a button on your screen that allows you to jump back to the top of
 * your site.
 */

/**
 * Implements hook_config_info().
 */
function back_to_top_config_info() {
  return array(
    'back_to_top.settings' => array(
      'label' => t('Back To Top settings'),
      'group' => t('Configuration'),
    ),
  );
}

/**
 * Implements hook_permission().
 */
function back_to_top_permission() {
  return array(
    'access back_to_top settings' => array(
      'title' => t('Administer Back To Top settings'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function back_to_top_menu() {
  return array(
    'admin/config/user-interface/back-to-top' => array(
      'title' => 'Back To Top',
      'description' => 'Customize the appearance and placement of the Back To Top button.',
      'page callback' => 'backdrop_get_form',
      'page arguments' => array('back_to_top_settings'),
      'access arguments' => array('access back_to_top settings'),
      'file' => 'back_to_top.admin.inc',
    ),
  );
}

/**
 * Implements hook_init().
 *
 * Add JS & CSS conditionally.
 */
function back_to_top_init() {
  $config = config('back_to_top.settings');
  $path = backdrop_get_path('module', 'back_to_top');
  $css = array();
  $css_hover = '';
  $placement = $config->get('placement');

  // Don't add JS & CSS under certain conditions.
  if ($config->get('disable_mobile') && module_exists('mobile_detect')) {
    require_once backdrop_get_path('module', 'mobile_detect') . '/library/Mobile_Detect.php';
    $detect = new Mobile_Detect;
    if ($detect->isMobile()) {
      return;
    }
  }
  if ($config->get('disable_admin') && path_is_admin(current_path())) {
    return;
  }
  if ($config->get('disable_front') && backdrop_is_front_page()) {
    return;
  }

  // Add JS.
  backdrop_add_js($path . '/js/back_to_top.js', array('every_page' => TRUE));
  $settings = array(
    'back_to_top' => array(
      'distance' => $config->get('distance'),
      'text' => check_plain($config->get('text')),
      'title' => $config->get('title'),
      'type' => $config->get('type'),
    ),
  );
  backdrop_add_js($settings, 'setting');

  // Add CSS.
  backdrop_add_css($path . '/css/back_to_top.css', array('every_page' => TRUE));
  // Bottom.
  if (in_array($placement, array(1, 2, 3))) {
    $css[] = 'bottom: 20px;';
  }
  // Top.
  if (in_array($placement, array(4, 5, 6))) {
    $css[] = 'top: 20px;';
  }
  // Middle.
  if (in_array($placement, array(7, 8, 9))) {
    $css[] = 'top: 50%;';
  }
  // Right.
  if (in_array($placement, array(1, 4, 7))) {
    $css[] = 'right: 20px;';
  }
  // Left.
  if (in_array($placement, array(2, 5, 8))) {
    $css[] = 'left: 20px;';
  }
  // Center.
  if (in_array($placement, array(3, 6, 9))) {
    $css[] = 'left: 50%;';
  }
  if ($config->get('type') == "text") {
    $css[] = 'background: ' . $config->get('color_bg') . ';';
    $css[] = 'border-color: ' . $config->get('color_border') . ';';
    $css[] = 'color: ' . $config->get('color_text') . ';';
    $css_hover = ' #backtotop:hover {background: ' . $config->get('color_hover') . '; border-color: ' . $config->get('color_hover') . ';}';
  }
  backdrop_add_css('#backtotop {' . implode(' ', $css) . '}' . $css_hover, 'inline');
}

